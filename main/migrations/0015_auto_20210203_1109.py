# Generated by Django 3.1.2 on 2021-02-03 04:09

import annoying.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0014_auto_20210203_1039'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessibleEnvironment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accessibility_passport_agreed', models.BooleanField(blank=True, null=True, verbose_name='Паспорт доступности согласован')),
                ('accessibility_passport_published_on_site', models.BooleanField(blank=True, null=True, verbose_name='Паспорт доступности Опубликован на сайте образовательного учреждения')),
                ('bathroom_sound_beacons', models.BooleanField(blank=True, null=True, verbose_name='Наличие звуковых маяков (кнопка вызова)(Движение по этажам)')),
                ('bathroom_handrails_and_railings', models.BooleanField(blank=True, null=True, verbose_name='Наличие поручней и перил (Движение по этажам)')),
                ('bathroom_contrast_tape_on_the_steps', models.BooleanField(blank=True, null=True, verbose_name='Наличие контрастной ленты на ступенях (Движение по этажам)')),
                ('bathroom_tactile_tiles', models.BooleanField(blank=True, null=True, verbose_name='Наличие тактильной плитки (Движение по этажам)')),
                ('bathroom_tactile_information_stand', models.BooleanField(blank=True, null=True, verbose_name='Наличие тактильного информационного стенда (Движение по этажам)')),
                ('building_entrance_tactile_mnemonic_diagrams', models.BooleanField(blank=True, null=True, verbose_name='Наличие тактильных мнемосхем (Вход в здание)')),
                ('building_entrance_sound_beacons', models.BooleanField(blank=True, null=True, verbose_name='Наличие звуковых маяков (кнопка вызова)(Вход в здание)')),
                ('building_entrance_automatic_door_opening', models.BooleanField(blank=True, null=True, verbose_name='Наличие функции автоматического открывания дверей (Вход в здание)')),
                ('building_entrance_anti_slip_coating', models.BooleanField(blank=True, null=True, verbose_name='Наличие противоскользящего покрытия (Вход в здание)')),
                ('building_entrance_lifts', models.BooleanField(blank=True, null=True, verbose_name='Наличие подъемников и лифтов (Вход в здание)')),
                ('building_entrance_ramps', models.BooleanField(blank=True, null=True, verbose_name='Наличие пандусов (Вход в здание)')),
                ('building_entrance_handrails_and_railings', models.BooleanField(blank=True, null=True, verbose_name='Наличие поручней и перил (Вход в здание)')),
                ('building_entrance_contrast_tape_on_the_steps', models.BooleanField(blank=True, null=True, verbose_name='Наличие контрастной ленты на ступенях (Вход в здание)')),
                ('building_entrance_tactile_tiles', models.BooleanField(blank=True, null=True, verbose_name='Наличие тактильной плитки (Вход в здание)')),
                ('building_entrance_tactile_information_stand', models.BooleanField(blank=True, null=True, verbose_name='Наличие тактильного информационного стенда (Вход в здание)')),
                ('floors_movement_tactile_mnemonic_diagrams', models.BooleanField(blank=True, null=True, verbose_name='Наличие тактильных мнемосхем (Движение по этажам)')),
                ('floors_movement_sound_beacons', models.BooleanField(blank=True, null=True, verbose_name='Наличие звуковых маяков (кнопка вызова)(Движение по этажам)')),
                ('floors_movement_automatic_door_opening', models.BooleanField(blank=True, null=True, verbose_name='Наличие функции автоматического открывания дверей (Движение по этажам)')),
                ('floors_movement_anti_slip_coating', models.BooleanField(blank=True, null=True, verbose_name='Наличие противоскользящего покрытия (Движение по этажам)')),
                ('floors_movement_lifts', models.BooleanField(blank=True, null=True, verbose_name='Наличие подъемников и лифтов (Движение по этажам)')),
                ('floors_movement_ramps', models.BooleanField(blank=True, null=True, verbose_name='Наличие пандусов (Движение по этажам)')),
                ('floors_movement_handrails_and_railings', models.BooleanField(blank=True, null=True, verbose_name='Наличие поручней и перил (Движение по этажам)')),
                ('floors_movement_contrast_tape_on_the_steps', models.BooleanField(blank=True, null=True, verbose_name='Наличие контрастной ленты на ступенях (Движение по этажам)')),
                ('floors_movement_tactile_tiles', models.BooleanField(blank=True, null=True, verbose_name='Наличие тактильной плитки (Движение по этажам)')),
                ('floors_movement_tactile_information_stand', models.BooleanField(blank=True, null=True, verbose_name='Наличие тактильного информационного стенда (Движение по этажам)')),
                ('markings_and_parking_for_disabled_people', models.BooleanField(blank=True, null=True, verbose_name='Наличие разметки и знака парковки для инвалидов')),
                ('street_tactile_tiles', models.BooleanField(blank=True, null=True, verbose_name='Наличие тактильной плитки (Уличная территория)')),
                ('asphalted_area_with_slopes', models.BooleanField(blank=True, null=True, verbose_name='Наличие асфальтируемой территории с низким бордюрам и спуском')),
                ('street_tactile_mnemonic_diagrams', models.BooleanField(blank=True, null=True, verbose_name='Наличие тактильных мнемосхем (Уличная территория)')),
                ('street_sound_beacons', models.BooleanField(blank=True, null=True, verbose_name='Наличие звуковых маяков (кнопка вызова)(Уличная территория)')),
                ('playgrounds_for_children_with_disabilities', models.BooleanField(blank=True, null=True, verbose_name='Наличие игровых площадок для детей с ограниченными возможностями')),
                ('induction_system_for_hearing_impaired', models.BooleanField(blank=True, null=True, verbose_name='Наличие индукционных систем для слабослышащих')),
            ],
            options={
                'verbose_name': 'Доступная среда',
            },
        ),
        migrations.CreateModel(
            name='SportsFacilities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sport_ground_count', models.IntegerField(blank=True, null=True, verbose_name='Количество спортивных площадок')),
                ('sport_ground_ok_count', models.TextField(blank=True, null=True, verbose_name='Количество спортивных площадок с работоспособным состоянием')),
                ('sport_ground_warning_count', models.TextField(blank=True, null=True, verbose_name='Количество спортивных площадок с ограниченно работоспособным состоянием')),
                ('sport_ground_emergency_count', models.TextField(blank=True, null=True, verbose_name='Количество спортивных площадок с аварийным состоянием')),
                ('hockey_rink_count', models.IntegerField(blank=True, null=True, verbose_name='Количество хоккейный коробок')),
                ('hockey_rink_ok_count', models.TextField(blank=True, null=True, verbose_name='Количество хоккейных коробок с работоспособным состоянием')),
                ('hockey_rink_warning_count', models.TextField(blank=True, null=True, verbose_name='Количество хоккейных коробок с ограниченно работоспособным состоянием')),
                ('hockey_rink_emergency_count', models.TextField(blank=True, null=True, verbose_name='Количество хоккейных коробок с аварийным состоянием')),
                ('shade_canopy_count', models.IntegerField(blank=True, null=True, verbose_name='Количество теневых навесов')),
                ('shade_canopy_ok_count', models.TextField(blank=True, null=True, verbose_name='Количество теневых навесов с работоспособным состоянием')),
                ('shade_canopy_warning_count', models.TextField(blank=True, null=True, verbose_name='Количество теневых навесов с ограниченно работоспособным состоянием')),
                ('shade_canopy_emergency_count', models.TextField(blank=True, null=True, verbose_name='Количество теневых навесов с аварийным состоянием')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='building',
            name='accessible_environment',
            field=annoying.fields.AutoOneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.accessibleenvironment', verbose_name='Спортивные сооружения'),
        ),
        migrations.AddField(
            model_name='building',
            name='sports_facilities',
            field=annoying.fields.AutoOneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.sportsfacilities', verbose_name='Спортивные сооружения'),
        ),
    ]
